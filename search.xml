<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>Hello Go!</title>
      <link href="/2018/07/19/Hello%20Go/"/>
      <url>/2018/07/19/Hello%20Go/</url>
      <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h4 id="要说当下什么语言最火，coder们自然而然就想到了Google爸爸推出的语言Go。"><a href="#要说当下什么语言最火，coder们自然而然就想到了Google爸爸推出的语言Go。" class="headerlink" title="要说当下什么语言最火，coder们自然而然就想到了Google爸爸推出的语言Go。"></a>要说当下什么语言最火，coder们自然而然就想到了Google爸爸推出的语言Go。</h4><h1 id="关于Go-官网链接"><a href="#关于Go-官网链接" class="headerlink" title="关于Go 官网链接"></a>关于Go <a href="https://golang.org/" target="_blank" rel="noopener">官网链接</a></h1><h4 id="Go是一种新的语言，一种并发的、带垃圾回收的、快速编译的语言。它具有以下特点："><a href="#Go是一种新的语言，一种并发的、带垃圾回收的、快速编译的语言。它具有以下特点：" class="headerlink" title="Go是一种新的语言，一种并发的、带垃圾回收的、快速编译的语言。它具有以下特点："></a>Go是一种新的语言，一种并发的、带垃圾回收的、快速编译的语言。它具有以下特点：</h4><ul><li><p><strong>它可以在一台计算机上用几秒钟的时间编译一个大型的Go程序。</strong></p></li><li><p><strong>Go为软件构造提供了一种模型，它使依赖分析更加容易，且避免了大部分C风格include文件与库的开头。</strong></p></li><li><p><strong>Go是静态类型的语言，它的类型系统没有层级。因此用户不需要在定义类型之间的关系上花费时间，这样感觉起来比典型的面向对象语言更轻量级。</strong></p></li><li><p><strong>Go完全是垃圾回收型的语言，并为并发执行与通信提供了基本的支持。按照其设计，Go打算为多核机器上系统软件的构造提供一种方法。</strong></p></li></ul><h1 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h1><h4 id="由于我使用的是MacBook，所以我就以MacBook为例进行环境搭建，Linux应该是差不多的步骤。"><a href="#由于我使用的是MacBook，所以我就以MacBook为例进行环境搭建，Linux应该是差不多的步骤。" class="headerlink" title="由于我使用的是MacBook，所以我就以MacBook为例进行环境搭建，Linux应该是差不多的步骤。"></a>由于我使用的是MacBook，所以我就以MacBook为例进行环境搭建，Linux应该是差不多的步骤。</h4><p><strong>打开<a href="https://golang.org/dl/" target="_blank" rel="noopener">此链接</a>，选择对于的平台的版本，我选择的是go1.10.3.darwin-amd64.tar.gz</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://dl.google.com/go/go1.10.3.darwin-amd64.tar.gz</span><br></pre></td></tr></table></figure><p><strong>下载后解压到 /usr/local 目录下</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo tar -C /usr/<span class="built_in">local</span> -xvf go1.10.3.darwin-amd64.tar.gz</span><br></pre></td></tr></table></figure><p><strong>配置环境变量，可以在/etc/profile处或者~/bashrc处以及~/zshrc处编辑</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> GO_HOME=<span class="string">"/usr/local/go"</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">"<span class="variable">$GO_HOME</span>/bin"</span></span><br></pre></td></tr></table></figure><p><strong>然后source &lt;你配置环境变量的地方&gt;，在命令行下执行go，有返回即是环境搭建完毕。</strong></p><h1 id="运行你的第一个Go语言程序"><a href="#运行你的第一个Go语言程序" class="headerlink" title="运行你的第一个Go语言程序"></a>运行你的第一个Go语言程序</h1><p><strong>打开vscode或者sublime编辑器，输入一下代码，保存为helloworld.go</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"fmt"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">fmt.Println(<span class="string">"Hello, Go"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>然后执行下面的命令</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> run helloworld.<span class="keyword">go</span></span><br></pre></td></tr></table></figure><p><strong>至此，你的第一个Go语言程序就完成了。</strong> </p>]]></content>
      
      <categories>
          
          <category> Go </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Go </tag>
            
        </tags>
      
    </entry>
    
  
  
    
    <entry>
      <title>about</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      <content type="html"><![CDATA[<h1 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h1><h3 id="个人简介"><a href="#个人简介" class="headerlink" title="个人简介"></a>个人简介</h3><ul><li><p><strong>一枚生命不息，折腾不止的程序猿。</strong></p></li><li><p><strong>现在主要从事Android，Java Web，Devops工作。</strong></p></li><li><p><strong>崇尚万物基于Linux。</strong></p></li><li><p><strong>热爱互联网，热爱编程，喜欢挑战新技术。</strong></p></li><li><p><strong>梦想是全栈工程师</strong></p></li></ul><h3 id="工作技能树"><a href="#工作技能树" class="headerlink" title="工作技能树"></a>工作技能树</h3><ul><li><strong>Android</strong><ul><li><strong>GPS</strong></li><li><strong>LBS</strong></li><li><strong>电商</strong></li><li><strong>环信</strong></li><li><strong>支付(微信，支付宝)</strong></li><li><strong>混合开发</strong></li><li><strong>反编译</strong></li></ul></li><li><strong>Java Web</strong>  <ul><li><strong>Spring Boot </strong></li><li><strong>Spring Cloud微服务全家桶 </strong></li><li><strong>Restful</strong></li><li><strong>Http</strong></li><li><strong>MyBatis</strong> </li><li><strong>Tomcat</strong></li><li><strong>Swagger</strong></li><li><strong>Api 加密</strong></li><li><strong>数据库</strong></li><li><strong>微信公众号开发</strong></li></ul></li><li><strong>Devops</strong> <ul><li><strong>Linux </strong><ul><li><strong>日常维护</strong></li><li><strong>各语言环境搭建</strong></li><li><strong>Shell脚本</strong></li><li><strong>Nginx</strong></li></ul></li><li><strong>Github , Gitbucket , GitLab </strong><ul><li><strong>通过WebHook实现持续集成</strong></li></ul></li><li><strong>Jenkins</strong><ul><li><strong>Android自动构建</strong></li><li><strong>iOS自动构建</strong></li><li><strong>Web自动构建</strong></li></ul></li><li><strong>Docker</strong> <ul><li><strong>Dockerfile编写</strong></li><li><strong>Docker-Compose服务编排</strong></li><li><strong>私有仓库搭建</strong></li></ul></li><li><strong>Jira</strong> <ul><li><strong>基于Scrum的敏捷开发管理</strong></li></ul></li><li><strong>SonarQube</strong> <ul><li><strong>静态代码检查</strong></li></ul></li><li><strong>ELK</strong><ul><li><strong>日志搜集分析</strong></li></ul></li></ul></li></ul><h3 id="生活技能树"><a href="#生活技能树" class="headerlink" title="生活技能树"></a>生活技能树</h3><ul><li><strong>服务器(我个人在家里维护了一台7*24小时的HP Gen8服务器)</strong><ul><li><strong>ESXi</strong><ul><li><strong>HomeLab</strong></li><li><strong>Ubuntu(主要用来给黑群晖提供NFS服务。Docker , Git , 充当测试服务器)</strong></li><li><strong>黑群晖(主要用来混PT和配合玩影音😁)</strong></li><li><strong>软路由(资金充裕了就会开搞)</strong></li></ul></li></ul></li><li><strong>路由器</strong><ul><li><strong>DDNS</strong></li><li><strong>固件编译，烧录</strong></li><li><strong>内网穿透</strong></li><li><strong>端口转发</strong></li></ul></li><li><strong>树莓派</strong><ul><li><strong>游戏系统</strong></li><li><strong>Kodi</strong></li><li><strong>Transmission(IO性能极差)</strong></li><li><strong>NAS(现已迁移到服务器)</strong></li></ul></li><li><strong>有待挖掘的设备</strong><ul><li><strong>天猫精灵(配合博联网关实现控制传统家用电器和开关，设备太贵了，后期慢慢补充)</strong></li><li><strong>小爱同学(超全曲库的哄娃神器，控制小米系智能家居，但是我家目前只有一个小米盒子😂)</strong></li><li><strong>Apple TV 4K(作为HomeKit智能家居网关，目前我只是它来Air Play)</strong></li></ul></li></ul><h3 id="联系方式"><a href="#联系方式" class="headerlink" title="联系方式"></a>联系方式</h3><ul><li>邮箱：<a href="mailto:leezheng0815@gmail.com" target="_blank" rel="noopener">leezheng0815@gmail.com</a></li></ul>]]></content>
    </entry>
    
  
</search>
